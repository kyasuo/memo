package explorer;

import java.io.File;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Pattern;

import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;

public class SqlAnalyzer {

	static final File BASE_DIR = new File("");

	static final String SEPARATOR = ",";

	static final Pattern SEQUENCE = Pattern.compile("^.+\\.NEXTVAL\\b.+$", Pattern.CASE_INSENSITIVE + Pattern.DOTALL);

	static final Pattern ROWNUM = Pattern.compile("^.+\\bROWNUM\\b.+$", Pattern.CASE_INSENSITIVE + Pattern.DOTALL);

	public static void main(String[] args) throws DocumentException {

		// parse
		final SAXReader reader = new SAXReader();
		final Map<String, SqlInfo> sqlMapInfo = new LinkedHashMap<String, SqlInfo>();
		for (File xml : FileUtils.listFiles(BASE_DIR, new String[] { "xml" }, true)) {
			final String fileName = xml.getName();
			if (!fileName.endsWith("_sqlMap.xml")) {
				continue;
			}
			for (Node node : reader.read(xml).selectNodes("/sqlMap/*[@id!='']")) {
				Element element = (Element) node;
				SqlInfo sqlInfo = new SqlInfo(xml);
				sqlMapInfo.put(element.attributeValue("id"), sqlInfo);
				String sql = element.getTextTrim();
				// search keywords
				sqlInfo.setSequence(SEQUENCE.matcher(sql).find());
				sqlInfo.setRownum(ROWNUM.matcher(sql).find());
			}
		}

		// output
		final List<String> lines = new ArrayList<String>();
		lines.add(StringUtils.join(new Object[] { "FileName", "FilePath", "SQLID", "SEQUENCE", "ROWNUM" }, SEPARATOR));
		for (String sqlId : sqlMapInfo.keySet()) {
			SqlInfo info = sqlMapInfo.get(sqlId);
			lines.add(StringUtils.join(new Object[] { info.getFile().getName(), info.getFile().getAbsolutePath(), sqlId,
			        info.isSequence(), info.isRownum() }, SEPARATOR));
		}
		// FIXME write to file
		System.out.println(StringUtils.join(lines, "\r\n"));
	}

	public static class SqlInfo {
		private final File file;
		private boolean sequence = false;
		private boolean rownum = false;

		public SqlInfo(File file) {
			this.file = file;
		}

		public boolean isSequence() {
			return sequence;
		}

		public void setSequence(boolean sequence) {
			this.sequence = sequence;
		}

		public boolean isRownum() {
			return rownum;
		}

		public void setRownum(boolean rownum) {
			this.rownum = rownum;
		}

		public File getFile() {
			return file;
		}
	}

}
